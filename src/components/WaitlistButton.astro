---
// src/components/WaitlistButton.astro
interface Props {
	variant?: "default" | "playground";
	instanceId?: string;
}

const { variant = "default", instanceId = crypto.randomUUID() } = Astro.props;
---

<script define:vars={{ instanceId, variant }}>
	document.addEventListener("DOMContentLoaded", () => {
		// Desktop functionality remains the same...
		const button = document.getElementById(`requestAccess-${instanceId}`);
		const playground = document.getElementById(`playgroundLink-${instanceId}`);
		const desktopForm = document.getElementById(`desktopForm-${instanceId}`);
		const cancelLink = document.getElementById(`cancelLink-${instanceId}`);

		// Desktop handlers...
		const showDesktopForm = () => {
			button?.classList.add("hidden");
			playground?.classList.add("hidden");
			desktopForm?.classList.remove("hidden");
			cancelLink?.classList.remove("hidden");

			setTimeout(() => {
				desktopForm?.classList.remove("opacity-0", "scale-95");
				cancelLink?.classList.remove("opacity-0");
				const input = document.getElementById(`emailInput-${instanceId}`);
				input?.focus();
			}, 50);
		};

		const showButtons = () => {
			desktopForm?.classList.add("opacity-0", "scale-95");
			cancelLink?.classList.add("opacity-0");

			setTimeout(() => {
				desktopForm?.classList.add("hidden");
				cancelLink?.classList.add("hidden");
				button?.classList.remove("hidden");
				playground?.classList.remove("hidden");
			}, 200);
		};

		// Mobile functionality
		const mobileButton = document.getElementById(`mobileRequestAccess-${instanceId}`);
		const mobileForm = document.getElementById(`mobileForm-${instanceId}`);
		const mobileCancelBtn = document.getElementById(`mobileCancelBtn-${instanceId}`);
		const playgroundButton = document.getElementById(`mobilePlayground-${instanceId}`);

		const showMobileForm = () => {
			mobileButton?.classList.add("hidden");
			playgroundButton?.classList.add("hidden"); // Hide playground button
			mobileForm?.classList.remove("hidden");
			setTimeout(() => {
				mobileForm?.classList.remove("opacity-0", "scale-95");
				const mobileInput = mobileForm?.querySelector("input");
				mobileInput?.focus();
			}, 50);
		};

		const hideMobileForm = () => {
			mobileForm?.classList.add("opacity-0", "scale-95");
			setTimeout(() => {
				mobileForm?.classList.add("hidden");
				mobileButton?.classList.remove("hidden");
				playgroundButton?.classList.remove("hidden"); // Show playground button
			}, 200);
		};

		button?.addEventListener("click", showDesktopForm);
		cancelLink?.addEventListener("click", (e) => {
			e.preventDefault();
			showButtons();
		});

		mobileButton?.addEventListener("click", showMobileForm);
		mobileCancelBtn?.addEventListener("click", (e) => {
			e.preventDefault();
			hideMobileForm();
		});

		// Outside click handlers - Modified to remove TypeScript
		document.addEventListener("click", (e) => {
			const target = e.target;

			// Desktop form outside click
			if (desktopForm && !desktopForm.classList.contains("hidden")) {
				if (!desktopForm.contains(target) && target !== button) {
					showButtons();
				}
			}

			// Mobile form outside click
			if (mobileForm && !mobileForm.classList.contains("hidden")) {
				if (!mobileForm.contains(target) && target !== mobileButton) {
					hideMobileForm();
				}
			}
		});

		// Prevent form clicks from triggering outside click
		desktopForm?.addEventListener("click", (e) => e.stopPropagation());
		mobileForm?.addEventListener("click", (e) => e.stopPropagation());
	});
</script>

<div class="relative h-[64px] hidden sm:block">
	<div id={`buttonContainer-${instanceId}`} class="flex items-center justify-center gap-4">
		<button
			id={`requestAccess-${instanceId}`}
			class="bg-stone-900 text-white px-6 py-2 rounded-md text-lg hover:bg-stone-800 active:scale-[0.98] active:bg-stone-700 transition-all duration-200"
		>
			Request Early Access
		</button>

		{
			variant === "playground" && (
				<a
					id={`playgroundLink-${instanceId}`}
					href="/playground"
					class="border border-stone-100 text-stone-900 px-6 py-2 rounded-md text-lg hover:bg-stone-50 active:scale-[0.98] active:bg-stone-100 active:border-stone-300 transition-all duration-200"
				>
					Interactive Playground
				</a>
			)
		}

		<form
			id={`desktopForm-${instanceId}`}
			class="hidden opacity-0 scale-95 flex border items-center bg-white rounded-lg shadow-lg overflow-hidden w-[440px] transition-all duration-200 ease-out"
		>
			<input
				id={`emailInput-${instanceId}`}
				type="email"
				placeholder="Email"
				class="flex-1 px-6 py-0.5 text-lg text-stone-600 placeholder-stone-400 outline-none bg-stone-50/50"
			/>
			<button
				type="submit"
				class="bg-black text-white px-6 py-1.5 text-lg font-medium whitespace-nowrap mx-2 my-2 rounded-lg hover:opacity-90 active:scale-[0.98] transition-all duration-150"
			>
				Join waitlist
			</button>
		</form>
	</div>

	<a
		href="#"
		id={`cancelLink-${instanceId}`}
		class="hidden opacity-0 text-stone-500 hover:text-stone-700 text-sm absolute -bottom-8 left-1/2 -translate-x-1/2 transition-all duration-200"
	>
		Cancel
	</a>
</div>

<!-- Mobile Version -->
<div class="block sm:hidden">
	<div class="h-[180px] sm:h-[52px]">
		<div class="space-y-4">
			<button
				id={`mobileRequestAccess-${instanceId}`}
				class="w-full bg-stone-900 text-white px-6 py-3 rounded-md text-lg hover:bg-stone-800 active:scale-[0.98] active:bg-stone-700 transition-all duration-200"
			>
				Request Early Access
			</button>

			{
				variant === "playground" && (
					<a
						id={`mobilePlayground-${instanceId}`}
						href="/playground"
						class="block w-full border border-stone-100 text-stone-900 px-6 py-3 rounded-md text-lg text-center hover:bg-stone-50 active:scale-[0.98] active:bg-stone-100 active:border-stone-300 transition-all duration-200"
					>
						Interactive Playground
					</a>
				)
			}

			<div
				id={`mobileForm-${instanceId}`}
				class="hidden opacity-0 scale-95 transition-all duration-200 space-y-4"
			>
				<input
					type="email"
					placeholder="Email"
					class="w-full px-6 py-3 border text-lg text-stone-600 placeholder-stone-400 outline-none bg-white rounded-lg shadow-sm"
				/>
				<button
					type="submit"
					class="w-full bg-black text-white px-6 py-3 text-lg font-medium rounded-lg hover:opacity-90 active:scale-[0.98] transition-all duration-150"
				>
					Request Early Access
				</button>
				<button
					id={`mobileCancelBtn-${instanceId}`}
					type="button"
					class="w-full text-stone-500 py-2 text-sm"
				>
					Cancel
				</button>
			</div>
		</div>
	</div>
</div>
