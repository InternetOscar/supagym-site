---
// src/components/WaitlistButton.astro
---

<script>
  const button = document.getElementById('requestAccess');
  const playground = document.getElementById('playgroundLink');
  const form = document.getElementById('waitlistForm');
  const buttonContainer = document.getElementById('buttonContainer');
  const cancelLink = document.getElementById('cancelLink');

  const showButtons = () => {
    // Hide form first
    form?.classList.add('opacity-0', 'scale-95');
    cancelLink?.classList.add('opacity-0');

    // Wait for fade out, then switch display
    setTimeout(() => {
      form?.classList.add('hidden');
      cancelLink?.classList.add('hidden');
      button?.classList.remove('hidden');
      playground?.classList.remove('hidden');

      // Trigger fade in for buttons
      setTimeout(() => {
        buttonContainer?.classList.add('gap-4');
        button?.classList.remove('opacity-0', 'translate-x-[-20px]');
        playground?.classList.remove('opacity-0', 'translate-x-[20px]');
      }, 50);
    }, 200);
  };

  const showForm = () => {
    // Start transition
    buttonContainer?.classList.remove('gap-4');
    button?.classList.add('opacity-0', 'translate-x-[-20px]');
    playground?.classList.add('opacity-0', 'translate-x-[20px]');

    // Wait for fade out, then switch display
    setTimeout(() => {
      button?.classList.add('hidden');
      playground?.classList.add('hidden');
      form?.classList.remove('hidden');
      cancelLink?.classList.remove('hidden');
      // Trigger fade in
      setTimeout(() => {
        form?.classList.remove('opacity-0', 'scale-95');
        cancelLink?.classList.remove('opacity-0');
      }, 50);
    }, 200);

    const input = document.getElementById('emailInput');
    input?.focus();
  };

  button?.addEventListener('click', showForm);
  cancelLink?.addEventListener('click', (e) => {
    e.preventDefault();
    showButtons();
  });

  // Handle outside clicks
  document.addEventListener('click', (e) => {
    const formElement = document.getElementById('waitlistForm');
    const requestButton = document.getElementById('requestAccess');

    if (!formElement?.contains(e.target as Node) &&
        !requestButton?.contains(e.target as Node) &&
        !formElement?.classList.contains('hidden')) {
      showButtons();
    }
  });
</script>

<style>
  .transition-slide {
    transition: all 200ms cubic-bezier(0.4, 0, 0.2, 1);
  }
</style>

<div class="relative h-[52px] sm:h-[52px]">
  <div id="buttonContainer" class="flex items-center justify-center gap-4 transition-[gap] duration-200">
    <button 
      id="requestAccess"
      class="bg-stone-900 text-white px-6 py-3 rounded-md text-lg hover:bg-stone-800 active:scale-[0.98] active:bg-stone-700 transition-slide"
    >
      Request Early Access
    </button>

    <a 
      id="playgroundLink" 
      href="/playground" 
      class="border border-stone-100 text-stone-900 px-6 py-3 rounded-md text-lg hover:bg-stone-50 active:scale-[0.98] active:bg-stone-100 active:border-stone-300 transition-slide"
    >
      Interactive Playground
    </a>

    <form 
      id="waitlistForm" 
      class="hidden opacity-0 scale-95 sm:flex sm:flex-row items-center bg-white rounded-[20px] shadow-lg overflow-hidden w-[90vw] sm:w-[440px] transition-all duration-200 ease-out max-w-[440px]"
    >
      <div class="flex flex-col w-full sm:flex-row sm:items-center">
        <input
          id="emailInput"
          type="email"
          placeholder="Email"
          class="w-full px-6 py-3.5 text-lg text-stone-600 placeholder-stone-400 outline-none bg-stone-50/50"
        />
        <div class="p-2 sm:p-0">
          <button 
            type="submit"
            class="w-full sm:w-auto bg-black text-white px-6 py-2.5 text-lg font-medium whitespace-nowrap sm:mx-2 sm:my-2 rounded-[14px] hover:opacity-90 active:scale-[0.98] transition-all duration-150"
          >
            Join waitlist
          </button>
        </div>
      </div>
    </form>
  </div>
  
  <a 
    href="#" 
    id="cancelLink" 
    class="hidden opacity-0 text-stone-500 hover:text-stone-700 text-sm absolute -bottom-8 left-1/2 -translate-x-1/2 transition-all duration-200"
  >
    Cancel
  </a>
</div>
